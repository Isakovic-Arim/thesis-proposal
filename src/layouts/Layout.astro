---
import { ViewTransitions } from "astro:transitions";
interface Props {
	title: string;
}

const { title } = Astro.props;
import Nav from "../components/Nav.astro";
import i18next from "i18next";
---

<!doctype html>
<html lang={i18next.language}>
	<head>
		<meta charset="UTF-8" />
		<meta name="description" content="Astro description" />
		<meta name="viewport" content="width=device-width" />
		<link rel="icon" type="image/svg+xml" href="/favicon.svg?" />
		<meta name="generator" content={Astro.generator} />
		<title>{title}</title>
		<ViewTransitions />
	</head>
	<body class="bg-cyan-50 dark:bg-gray-900">
		<Nav />
		<slot />
	</body><style is:global>

  @import url('https://fonts.googleapis.com/css2?family=Open+Sans:wght@400;700&display=swap');

		:root {
			--accent: 136, 58, 234;
			--accent-light: 224, 204, 250;
			--accent-dark: 49, 10, 101;
			--accent-gradient: linear-gradient(
				45deg,
				rgb(var(--accent)),
		<		rgb(var(--accent-light)) 30%,
				white 60%
			);
		}
		html {
			font-family: "Open Sans", sans-serif;
			scroll-behavior: smooth;
		}

		code {
			font-family:
				Menlo,
				Monaco,
				Lucida Console,
				Liberation Mono,
				DejaVu Sans Mono,
				Bitstream Vera Sans Mono,
				Courier New,
				monospace;
		}
	</style>
	<script is:inline>
		const theme = (() => {
			if (
				typeof localStorage !== "undefined" &&
				localStorage.getItem("theme")
			) {
				return localStorage.getItem("theme");
			}
			if (window.matchMedia("(prefers-color-scheme: dark)").matches) {
				return "dark";
			}
			return "light";
		})();

		if (theme === "light") {
			document.documentElement.classList.remove("dark");
		} else {
			document.documentElement.classList.add("dark");
		}
		window.localStorage.setItem("theme", theme);
	</script>
</html>
